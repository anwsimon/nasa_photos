{"version":3,"sources":["components/LikeButton.js","components/LookCloser.js","components/Photo.js","components/Header.js","components/Home.js","App.js","index.js"],"names":["LikeButton","props","onClick","className","LookCloser","url","href","target","rel","Photo","photo","useState","isLiked","setIsLiked","src","alt","title","date","explanation","Header","PHOTO_QUERY","gql","Home","useQuery","loading","error","data","console","message","get5Photos","map","index","App","client","ApolloClient","uri","cache","InMemoryCache","fetchOptions","mode","ReactDOM","render","ApolloProvider","document","getElementById"],"mappings":"kOAWeA,MATf,SAAqBC,GAAQ,IACnBC,EAAuBD,EAAvBC,QAASC,EAAcF,EAAdE,UAEjB,OACE,qBAAKD,QAASA,EAASC,UAAYA,KCIxBC,MARf,SAAqBH,GAAQ,IACnBI,EAAQJ,EAARI,IAER,OACE,mBAAGC,KAAMD,EAAKE,OAAO,SAASC,IAAI,sBAAlC,iCCkCWC,MAnCf,SAAeR,GACb,IAAMS,EAAQT,EAAMS,MADA,EAEUC,oBAAS,GAFnB,mBAEbC,EAFa,KAEJC,EAFI,KAIpB,OACQ,sBAAKV,UAAY,OAAjB,UACE,qBAAKW,IAAKJ,EAAML,IAAKU,IAAI,KACzB,sBAAKZ,UAAU,YAAf,UACE,oBAAIA,UAAU,aAAd,SACGO,EAAMM,QAET,6BACGN,EAAMO,OAET,mBAAGd,UAAU,mBAAb,SACGO,EAAMQ,cAET,sBAGA,cAAC,EAAD,CACEhB,QAAS,WAAOW,GAAYD,IAC5BA,QAASA,EACTI,MAAOJ,EAAU,SAAW,OAC5BT,UAAWS,EAAU,YAAc,UAErC,cAAC,EAAD,CACEP,IAAOK,EAAML,aCZdc,I,EAAAA,EAlBf,WAEE,OACI,gCACE,qBAAKL,IAAI,iBAAgBC,IAAI,YAAYZ,UAAU,WACnD,2CAGA,iGAC8D,uBAD9D,qDAIA,sHCTFiB,EAAcC,YAAH,yHAkDFC,MAxCf,WAAiB,IAAD,EACmBC,YAASH,GAAlCI,EADM,EACNA,QAASC,EADH,EACGA,MAAOC,EADV,EACUA,KAExB,OAAIF,EACF,gCACE,oFACA,qBAAKV,IAAM,uGAAuGC,IAAI,QAKtHU,GACFE,QAAQF,MAAMA,EAAOA,EAAMG,SAEzB,gCACE,qHACA,qBAAKd,IAAM,sEAAsEC,IAAI,SAOzF,gCACE,cAAC,EAAD,IACA,qBAAKZ,UAAU,YAAf,SACOuB,EAAKG,WAAWC,KAAI,SAACpB,EAAOqB,GAC3B,OACE,8BACE,qBAAK5B,UAAY,YAAjB,SACE,cAAC,EAAD,CAAOO,MAASA,OAFTqB,YC/BZC,MAVf,WACE,OACE,qBAAK7B,UAAU,MAAf,SACE,wBAAQA,UAAU,aAAlB,SACI,cAAC,EAAD,S,wBCMJ8B,EAAS,IAAIC,IAAa,CAC9BC,IAAK,gCACLC,MAAO,IAAIC,IACXC,aAAc,CACZC,KAAM,aAKVC,IAASC,OACP,cAACC,EAAA,EAAD,CAAgBT,OAAUA,EAA1B,SACI,cAAC,EAAD,MAEJU,SAASC,eAAe,SAGXX,c","file":"static/js/main.2760aca9.chunk.js","sourcesContent":["import React from 'react';\n\nfunction LikeButton (props) {\n  const { onClick, className } = props;\n\n  return (\n    <div onClick={onClick} className ={className}>\n    </div>\n  );\n}\n\nexport default LikeButton\n","import React from 'react';\n\nfunction LookCloser (props) {\n  const { url } = props;\n\n  return (\n    <a href={url} target=\"_blank\" rel=\"noreferrer noopener\" >Take a closer look</a>\n  );\n}\n\nexport default LookCloser\n","import React from \"react\"\nimport { useState } from \"react\"\nimport LikeButton from \"./LikeButton\"\nimport LookCloser from \"./LookCloser\"\n\nfunction Photo(props) {\n  const photo = props.photo\n  const [isLiked, setIsLiked] = useState(false)\n\n  return (\n          <div className = \"card\" >\n            <img src={photo.url} alt=''/>\n            <div className=\"card-body\">\n              <h3 className=\"card-title\">\n                {photo.title}\n              </h3>\n              <h4>\n                {photo.date}\n              </h4>\n              <p className=\"card-description\">\n                {photo.explanation}\n              </p>\n              <p>\n\n              </p>\n              <LikeButton\n                onClick={() => {setIsLiked(!isLiked)}}\n                isLiked={isLiked}\n                title={isLiked ? \"Unlike\" : \"Like\"}\n                className={isLiked ? \"is-active\" : \"heart\"}\n              />\n              <LookCloser\n                url = {photo.url}\n              />\n            </div>\n          </div>\n      )\n}\n\n\nexport default Photo;\n","import React from \"react\"\n\nfunction Header () {\n\n  return (\n      <div>\n        <img src=\"felicette.jpeg\"alt=\"felicette\" className=\"masked\"/>\n        <h1>\n          Cat Snaps\n        </h1>\n        <h3>\n          A collection of Félicette's snaps, from her trip into space.<br/>\n          Because space is for everyone, not just humans.\n        </h3>\n        <small>Disclaimer: Félicette did not take these snaps. Amazing photographers did.</small>\n      </div>\n      )\n}\n\n\nexport default Header;\n","import React from \"react\"\nimport { gql, useQuery } from '@apollo/client';\nimport Photo from './Photo'\nimport Header from './Header'\n//graphQL query for 5 photos\nconst PHOTO_QUERY = gql`\n query photoQuery {\n  get5Photos {\n    title,\n    url,\n    explanation,\n    date\n  }\n}`\n\nfunction Home() {\n  const { loading, error, data } = useQuery(PHOTO_QUERY);\n  //loading screen\n  if (loading) return (\n    <div>\n      <p>Thank you for waiting while we load today's images.</p>\n      <img src = \"https://64.media.tumblr.com/8e8caf6f584fd8d4e6dda24f98a8b572/tumblr_obupr9PSpm1rhj2m8o1_r2_1280.gifv\" alt=''></img>\n    </div>\n  );\n\n  //error screen & log output\n  if (error) {\n    console.error(error, error.message)\n    return (\n      <div>\n        <p>Sorry, it appears we've experienced an error. We're hard at work trying to fix this.</p>\n        <img src = \"http://boingboing.net/wp-content/uploads/2012/03/kittensinspace.jpg\" alt=''></img>\n      </div>\n    )\n  }\n\n  //homepage initial render, renders 5 photos\n  return (\n    <div >\n      <Header/>\n      <div className=\"grid-list\">\n            {data.get5Photos.map((photo, index) => {\n              return (\n                <div key ={index} >\n                  <div className = \"grid-item\">\n                    <Photo photo = {photo}/>\n                  </div>\n                </div>\n              )\n            })}\n      </div>\n    </div>\n  );\n}\n\nexport default Home;\n","import Home from './components/Home'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n          <Home/>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport {\n  ApolloClient,\n  ApolloProvider,\n  InMemoryCache,\n} from \"@apollo/client\";\n\n\nconst client = new ApolloClient({\n  uri: 'http://localhost:4000/graphql',\n  cache: new InMemoryCache(),\n  fetchOptions: {\n    mode: \"no-cors\",\n  }\n});\n\n\nReactDOM.render(\n  <ApolloProvider client = {client}>\n      <App />\n  </ApolloProvider>,\n  document.getElementById('root')\n);\n\nexport default client\n"],"sourceRoot":""}